name: Build and release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get tag
        id: get_tag
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
      - name: Build Compiler
        run: docker build -t builder .

      - name: Build Windows amd64 Binaries
        run: docker run --rm -v ./bin:/home/app/bin -e TAG=${{ steps.get_tag.outputs.tag }} -e CC=x86_64-w64-mingw32-gcc -e OS=windows -e ARCH=amd64 -e CGO_ENABLED=1 -e EXTENSION=.exe builder

      - name: Build Linux amd64 Binaries
        run: docker run --rm -v ./bin:/home/app/bin -e TAG=${{ steps.get_tag.outputs.tag }} -e CC=x86_64-linux-gnu-gcc -e OS=linux -e ARCH=amd64 -e CGO_ENABLED=1 builder

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_tag.outputs.tag }}
          release_name: ${{ steps.get_tag.outputs.tag }}
          body: |
            Release ${{ steps.get_tag.outputs.tag }}
          draft: false
          prerelease: false

      - name: Upload binaries to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/mouse_mover-${{ steps.get_tag.outputs.tag }}.windows-amd64.exe
          asset_name: mouse_mover-${{ steps.get_tag.outputs.tag }}.windows-amd64.exe
          asset_content_type: application/octet-stream
